server:
    port: 8080

#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=mongo

spring:
    kafka:
        consumer:
            group-id: "group1"
            value-deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
            key-deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
            enable-auto-commit: false
            auto-offset-reset: earliest
        topic:
            name: "apn_topic"
#        servers: "localhost:3032"
        servers: "my-cluster-kafka-bootstrap:9092"
        bootstrap-servers: "my-cluster-kafka-bootstrap:9092"
    data:
        mongodb:
            host: "mongo-service"
#            host: "localhost"
            port: 27017
            database: "mongo"

#spring.kafka.consumer.group-id=group1
#spring.kafka.topic.name=apn_topic
#spring.kafka.servers=localhost:3032


kafka:
    threads: 2

#management.metrics.export.influx.uri=http://localhost:8086
#management.metrics.export.influx.db=myDb
#management.metrics.export.influx.user-name=admin
#management.metrics.export.influx.password=admin

management:
    endpoints:
        web:
            exposure:
                include: health,info,metrics,prometheus
    endpoint:
        health:
            show-details: always
    health:
        probes:
            enabled: true